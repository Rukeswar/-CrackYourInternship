class MyQueue {
    Stack<Integer> s1; 
    Stack<Integer> s2; 
    int front = 0; 

    public MyQueue() {
        this.s1 = new Stack<>();
        this.s2 = new Stack<>();
    }
    
    public void push(int x) {
        if (s1.empty()) {
            front = x; // Update the front element if s1 is empty
        }
        s1.push(x); 
    }
    
    public int pop() {
        if (s2.isEmpty()) {
            while (!s1.isEmpty()) {
                s2.push(s1.pop()); // Transfer elements from s1 to s2 if s2 is empty
            }
        }
        return s2.pop(); 
    }
    
    public int peek() {
        return s2.isEmpty() ? front : s2.peek();
    }
    
    public boolean empty() {
        return s1.empty() && s2.empty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */